package universidadulp.vistas;

import java.awt.Component;
import java.awt.Container;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import static universidadulp.connection.DatabaseConnection.getInstance;
import universidadulp.entidades.Materia;
import universidadulp.repositorio.InscripcionRepositorio;
import universidadulp.repositorio.MateriaRepositorio;

public class ABMMaterias extends javax.swing.JInternalFrame {

    private MateriaRepositorio mr;
    private InscripcionRepositorio ir;

    private Materia mat;
    private int estado;

    public ABMMaterias() {
        initComponents();

        mr = new MateriaRepositorio();
        ir = new InscripcionRepositorio();
        
         setFrameIcon(new ImageIcon(getClass().getResource("/icon/logo1.png")));

        estado = 0;

        limpiarDatosMaterias();

        cmdSalir.addActionListener((e) -> {
            dispose();
        });

        addSelectAllOnFocusToTextFields(this);

        pasarFoco(txtCodigo);
    }

    private void limpiarDatosMaterias() {

        limpiarCampos();
        estadosCampos(true, false, false, false);
        estadosBotones(true, false, false, false, false, true);

    }

    private void restaurarDatosMaterias() {

        estadosBotones(true, true, true, false, true, false);
        estadosCampos(false, false, false, false);
        txtCodigo.setText("" + mat.getIdMateria());
        txtNombre.setText(mat.getNombre());
        txtAnio.setText("" + mat.getAnioMateria());
        chkActivo.setSelected(mat.isActivo());
        cmdEliminar.setEnabled(mat.isActivo());

    }

    private void estadosBotones(boolean btnNuevo, boolean btnEditar, boolean btnEliminar, boolean btnGuardar, boolean btnCancelar, boolean btnBuscar) {

        cmdNuevo.setEnabled(btnNuevo);
        cmdEditar.setEnabled(btnEditar);
        cmdEliminar.setEnabled(btnEliminar);
        cmdGuardar.setEnabled(btnGuardar);
        cmdCancelar.setEnabled(btnCancelar);
        cmdBuscar.setEnabled(btnBuscar);

    }

    private void estadosCampos(boolean tfCodigo, boolean tfNombre, boolean tfAnio, boolean ckActivo) {

        txtCodigo.setEnabled(tfCodigo);
        txtNombre.setEnabled(tfNombre);
        txtAnio.setEnabled(tfAnio);
        chkActivo.setEnabled(ckActivo);

    }

    private void limpiarCampos() {

        txtCodigo.setHorizontalAlignment(SwingConstants.RIGHT);
        txtCodigo.setText("0");
        txtNombre.setText("");
        txtAnio.setHorizontalAlignment(SwingConstants.RIGHT);
        txtAnio.setText("1");
        chkActivo.setSelected(true);

    }

    private boolean validarCodigo(String idMateria) {

        return idMateria.matches("^[1-9]\\d{0,6}$");

    }

    private boolean validarNombre(String nombre) {

        return nombre.matches("^([A-ZÁÉÍÓÚÜÑ]([A-ZÁÉÍÓÚÜÑa-záéíóüñ0-9]+))([ ][A-ZÁÉÍÓÚÜÑ]([A-ZÁÉÍÓÚÜÑa-záéíóüñ0-9]*)){0,5}");

    }

    private boolean validarAnio(String anio) {

        return anio.matches("^[1-6]$");

    }

    public static void addSelectAllOnFocusToTextFields(Container container) {

        for (Component component : container.getComponents()) {

            if (component instanceof JTextField) {

                JTextField textField = (JTextField) component;
                textField.addFocusListener(new FocusAdapter() {

                    @Override
                    public void focusGained(FocusEvent e) {

                        textField.selectAll();

                    }

                });

            } else if (component instanceof Container) {
                // Si es un contenedor, busca campos de texto dentro del contenedor
                addSelectAllOnFocusToTextFields((Container) component);

            }
        }
    }

    private void pasarFoco(Component com) {

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {

                com.requestFocusInWindow();

            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        lblCodigo = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        cmdBuscar = new javax.swing.JButton();
        lblNom = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblAnio = new javax.swing.JLabel();
        txtAnio = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        chkActivo = new javax.swing.JCheckBox();
        cmdNuevo = new javax.swing.JButton();
        cmdEditar = new javax.swing.JButton();
        cmdEliminar = new javax.swing.JButton();
        cmdSalir = new javax.swing.JButton();
        cmdGuardar = new javax.swing.JButton();
        cmdCancelar = new javax.swing.JButton();

        setTitle("MATERIAS");

        lblCodigo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblCodigo.setText("CODIGO");

        cmdBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Search_16.png"))); // NOI18N
        cmdBuscar.setText("Buscar");
        cmdBuscar.setSelected(true);
        cmdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdBuscarActionPerformed(evt);
            }
        });

        lblNom.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblNom.setText("NOMBRE");

        lblAnio.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblAnio.setText("AÑO");

        lblEstado.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEstado.setText("ESTADO");

        chkActivo.setText("ACTIVO");

        cmdNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/New_16.png"))); // NOI18N
        cmdNuevo.setText("Nuevo");
        cmdNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdNuevoActionPerformed(evt);
            }
        });

        cmdEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Edit_File_16.png"))); // NOI18N
        cmdEditar.setText("Editar");
        cmdEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEditarActionPerformed(evt);
            }
        });

        cmdEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Delete_File_16.png"))); // NOI18N
        cmdEliminar.setText("Eliminar");
        cmdEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEliminarActionPerformed(evt);
            }
        });

        cmdSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Exit_16.png"))); // NOI18N
        cmdSalir.setText("Salir");

        cmdGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Save_File_16.png"))); // NOI18N
        cmdGuardar.setText("Guardar");
        cmdGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarActionPerformed(evt);
            }
        });

        cmdCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/Cancel_File_16.png"))); // NOI18N
        cmdCancelar.setText("Cancelar");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblNom)
                        .addComponent(lblCodigo)
                        .addComponent(lblAnio))
                    .addComponent(lblEstado, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkActivo)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55))
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cmdNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(cmdGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(cmdEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigo)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmdBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNom)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAnio)
                    .addComponent(txtAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstado)
                    .addComponent(chkActivo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdSalir)
                    .addComponent(cmdNuevo)
                    .addComponent(cmdEditar)
                    .addComponent(cmdEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmdGuardar)
                    .addComponent(cmdCancelar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdBuscarActionPerformed

        if (validarCodigo(txtCodigo.getText())) {

            try (Connection conn = getInstance();) {

                mat = mr.buscarPorId(Integer.parseInt(txtCodigo.getText()));

                if (mat != null) {

                    restaurarDatosMaterias();
                    pasarFoco(cmdEditar);

                } else {

                    txtCodigo.setText("0");
                    JOptionPane.showConfirmDialog(this, "El Código de Materia ingresado no existe en la BD", "Materia Inexistente", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    pasarFoco(txtCodigo);

                }
            } catch (SQLException ex) {

                limpiarDatosMaterias();
                JOptionPane.showConfirmDialog(this, ex.getMessage(), "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
                pasarFoco(txtCodigo);

            } finally {

                estado = 0;
            }

        } else {

            JOptionPane.showConfirmDialog(this, "Ingrese un Código Correcto", "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            pasarFoco(txtCodigo);

        }

    }//GEN-LAST:event_cmdBuscarActionPerformed

    private void cmdNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdNuevoActionPerformed

        estado = 1;

        limpiarCampos();
        estadosCampos(false, true, true, true);
        estadosBotones(false, false, false, true, true, false);
        pasarFoco(txtNombre);

    }//GEN-LAST:event_cmdNuevoActionPerformed

    private void cmdEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEditarActionPerformed

        estado = 2;

        estadosCampos(false, true, true, true);
        estadosBotones(false, false, false, true, true, false);
        pasarFoco(txtNombre);

    }//GEN-LAST:event_cmdEditarActionPerformed

    private void cmdEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEliminarActionPerformed

        //if (JOptionPane.showConfirmDialog(this, "Esta Seguro que desea eliminar la Materia?", "Eliminar Materia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
        int idCodigo = Integer.parseInt(txtCodigo.getText());
        limpiarDatosMaterias();

        try (Connection conn = getInstance();) {

            if (ir.devolverNotaPorMat(idCodigo)) {

                if (JOptionPane.showConfirmDialog(null, "La Materia posee Notas con Alumnos Activos. Elimina?", "Eliminar Materia", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {

                    int result = mr.eliminarPorId(idCodigo);

                    if (result == 1) {
                        
                        JOptionPane.showConfirmDialog(this, "La Materia fue eliminada correctamente", "Materia Eliminada", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

                    } else {

                        JOptionPane.showConfirmDialog(this, "La Materia ya estaba eliminada", "Materia Inactiva", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

                    }

                }

            } else {
                
                if (JOptionPane.showConfirmDialog(this, "Esta Seguro que desea eliminar la Materia?", "Eliminar Materia", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == 0) {
                    
                    int result = mr.eliminarPorId(idCodigo);

                    if (result == 1) {
                        
                        JOptionPane.showConfirmDialog(this, "La Materia fue eliminada correctamente", "Materia Eliminada", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

                    } else {

                        JOptionPane.showConfirmDialog(this, "La Materia ya estaba eliminada", "Materia Inactiva", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

                    }
                    
                }

            }

        } catch (SQLException ex) {

            JOptionPane.showConfirmDialog(this, ex.getMessage(), "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);

        } finally {

            estado = 0;

            pasarFoco(txtCodigo);

        }
        //}

    }//GEN-LAST:event_cmdEliminarActionPerformed

    private void cmdGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarActionPerformed

        if (!validarNombre(txtNombre.getText())) {

            JOptionPane.showConfirmDialog(this, "Ingrese un Nombre Correcto", "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            pasarFoco(txtNombre);
            return;

        }

        if (!validarAnio(txtAnio.getText())) {

            JOptionPane.showConfirmDialog(this, "Ingrese un Año Correcto", "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);
            pasarFoco(txtAnio);
            return;

        }

        if (estado == 1) {

            mat = new Materia(txtNombre.getText(), Integer.parseInt(txtAnio.getText()), chkActivo.isSelected());

        } else if (estado == 2) {

            mat = new Materia(Integer.parseInt(txtCodigo.getText()), txtNombre.getText(), Integer.parseInt(txtAnio.getText()), chkActivo.isSelected());

        }

        limpiarDatosMaterias();

        try (Connection conn = getInstance();) {

            mat = mr.guardar(mat);

            if (estado == 1) {

                JOptionPane.showConfirmDialog(this, "La Materia fue agregada correctamente", "Materia Creada", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

            } else if (estado == 2) {

                JOptionPane.showConfirmDialog(this, "La Materia fue modificada correctamente", "Materia Modificada", JOptionPane.CLOSED_OPTION, JOptionPane.INFORMATION_MESSAGE);

            }

        } catch (SQLException ex) {

            JOptionPane.showConfirmDialog(this, ex.getMessage(), "Error", JOptionPane.CLOSED_OPTION, JOptionPane.ERROR_MESSAGE);

        } finally {

            estado = 0;

            pasarFoco(txtCodigo);

        }

    }//GEN-LAST:event_cmdGuardarActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed

        if (estado == 1) {

            limpiarDatosMaterias();
            pasarFoco(txtCodigo);

        } else if (estado == 2) {

            restaurarDatosMaterias();
            pasarFoco(cmdEditar);

        } else {

            limpiarDatosMaterias();
            pasarFoco(txtCodigo);

        }

        estado = 0;

    }//GEN-LAST:event_cmdCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkActivo;
    private javax.swing.JButton cmdBuscar;
    private javax.swing.JButton cmdCancelar;
    private javax.swing.JButton cmdEditar;
    private javax.swing.JButton cmdEliminar;
    private javax.swing.JButton cmdGuardar;
    private javax.swing.JButton cmdNuevo;
    private javax.swing.JButton cmdSalir;
    private javax.swing.JLabel lblAnio;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNom;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txtAnio;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
